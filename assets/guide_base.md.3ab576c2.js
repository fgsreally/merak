import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.435d96fe.js";const h=JSON.parse('{"title":"基础功能","description":"","frontmatter":{},"headers":[],"relativePath":"guide/base.md","filePath":"guide/base.md","lastUpdated":1705850584000}'),l={name:"guide/base.md"},o=p(`<h1 id="基础功能" tabindex="-1">基础功能 <a class="header-anchor" href="#基础功能" aria-label="Permalink to &quot;基础功能&quot;">​</a></h1><h2 id="数据-功能共享" tabindex="-1">数据/功能共享 <a class="header-anchor" href="#数据-功能共享" aria-label="Permalink to &quot;数据/功能共享&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 主应用中</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Merak</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">/** */</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">app.props.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 主应用中</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Merak</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">/** */</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">app.props.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 子应用中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (window.$Merak)</span></span>
<span class="line"><span style="color:#E1E4E8;">  window.$Merak.props.</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">()</span><span style="color:#6A737D;">// output:test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 子应用中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (window.$Merak)</span></span>
<span class="line"><span style="color:#24292E;">  window.$Merak.props.</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">()</span><span style="color:#6A737D;">// output:test</span></span></code></pre></div><h2 id="事件总线" tabindex="-1">事件总线 <a class="header-anchor" href="#事件总线" aria-label="Permalink to &quot;事件总线&quot;">​</a></h2><p><code>merak</code>不提供事件总线，但实现它很容易。本质上就是有一个东西可以所有应用共享，可以通过静态属性实现</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Merak.namespace.emitter </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> emitter</span><span style="color:#6A737D;">// your event emitter</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Merak.namespace.emitter </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> emitter</span><span style="color:#6A737D;">// your event emitter</span></span></code></pre></div><blockquote><p>Merak的静态属性，可以在多个应用中共享</p></blockquote><h2 id="路由" tabindex="-1">路由 <a class="header-anchor" href="#路由" aria-label="Permalink to &quot;路由&quot;">​</a></h2><p>简而言之，至少在默认配置下，<code>merak</code>的很多表现和无界几乎一致，路由也沿袭着<code>query</code>的模式,</p><div class="info custom-block"><p class="custom-block-title">路由跳转</p><p>跳转到指定应用的指定路由</p><p>这根视图框架中的路由原理有关，不一定起效</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { $$jump } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;merak-core&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { $jump } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;merak-helper&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 主应用中</span></span>
<span class="line"><span style="color:#B392F0;">$$jump</span><span style="color:#E1E4E8;">(id, route)</span></span>
<span class="line"><span style="color:#6A737D;">// 子应用中</span></span>
<span class="line"><span style="color:#B392F0;">$jump</span><span style="color:#E1E4E8;">(id, route)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { $$jump } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;merak-core&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { $jump } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;merak-helper&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 主应用中</span></span>
<span class="line"><span style="color:#6F42C1;">$$jump</span><span style="color:#24292E;">(id, route)</span></span>
<span class="line"><span style="color:#6A737D;">// 子应用中</span></span>
<span class="line"><span style="color:#6F42C1;">$jump</span><span style="color:#24292E;">(id, route)</span></span></code></pre></div></div><blockquote><p>这并非一定，可以通过沙箱进行修改</p></blockquote>`,12),e=[o];function t(c,r,i,y,E,d){return a(),n("div",null,e)}const m=s(l,[["render",t]]);export{h as __pageData,m as default};

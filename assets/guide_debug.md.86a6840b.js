import{_ as s,o as a,c as e,a as n}from"./app.ef81feb9.js";const F=JSON.parse('{"title":"debug/error","description":"","frontmatter":{},"headers":[{"level":2,"title":"runtime debug","slug":"runtime-debug","link":"#runtime-debug","children":[]},{"level":2,"title":"runtime error","slug":"runtime-error","link":"#runtime-error","children":[{"level":3,"title":"公共","slug":"公共","link":"#公共","children":[]},{"level":3,"title":"专属","slug":"专属","link":"#专属","children":[]}]},{"level":2,"title":"compile debug","slug":"compile-debug","link":"#compile-debug","children":[]}],"relativePath":"guide/debug.md","lastUpdated":1703860776000}'),l={name:"guide/debug.md"},o=n(`<h1 id="debug-error" tabindex="-1">debug/error <a class="header-anchor" href="#debug-error" aria-hidden="true">#</a></h1><h2 id="runtime-debug" tabindex="-1">runtime debug <a class="header-anchor" href="#runtime-debug" aria-hidden="true">#</a></h2><p>开启调试模式</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MERAK_DEBUG </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span></code></pre></div><p>可在控制台verbose看到调试信息，主要是沙箱的运行情况</p><h2 id="runtime-error" tabindex="-1">runtime error <a class="header-anchor" href="#runtime-error" aria-hidden="true">#</a></h2><p>错误处理有两种：公共的和专属的</p><h3 id="公共" tabindex="-1">公共 <a class="header-anchor" href="#公共" aria-hidden="true">#</a></h3><p>当没有示例专属的错误处理时，就会直接调用类上的静态函数，即公共的错误处理</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Merak</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">errorHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">opts</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Error</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">instance</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Merak</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="专属" tabindex="-1">专属 <a class="header-anchor" href="#专属" aria-hidden="true">#</a></h3><p>如果某个子应用需要特殊的错误监控</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">getInstance</span><span style="color:#A6ACCD;">(id)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">errorHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">opt</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Error</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>默认会输出错误信息，但不会抛出错误！ 错误处理主要是服务监控系统</p></blockquote><h2 id="compile-debug" tabindex="-1">compile debug <a class="header-anchor" href="#compile-debug" aria-hidden="true">#</a></h2><p>在vite/webpack/cli中设置<code>logPath</code>,它会产生一个含有调试信息的<code>md</code>文件，包括隔离了哪些变量、有哪些可能会有问题（eval）</p><div class="info custom-block"><p class="custom-block-title">变量不被隔离</p><p>如果希望某个函数使用的<code>document</code>不被隔离，但没法引入<code>merak-helper</code> 那么可以在变量前添加:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/** </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">merak</span><span style="color:#676E95;font-style:italic;"> */</span><span style="color:#A6ACCD;">document</span></span>
<span class="line"></span></code></pre></div><blockquote><p>必须要一模一样,不能有多余空格 这主要对于<code>npm</code>包，建议与<code>patch-package</code>共用</p></blockquote><p>隔离是隔离变量上的所有属性和方法，但有的时候硬需要变量本身，比如<code>observe(document)</code>，没法隔离，只能这样解决。</p></div>`,17),p=[o];function t(r,c,i,d,y,D){return a(),e("div",null,p)}const A=s(l,[["render",t]]);export{F as __pageData,A as default};

import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.57e4d220.js";const h=JSON.parse('{"title":"快速上手","description":"","frontmatter":{"sidebarDepth":2,"collapsable":false},"headers":[],"relativePath":"guide/quick-start.md","filePath":"guide/quick-start.md","lastUpdated":1713971802000}'),l={name:"guide/quick-start.md"},o=p(`<h1 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h1><h2 id="子应用" tabindex="-1">子应用 <a class="header-anchor" href="#子应用" aria-label="Permalink to &quot;子应用&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merak-helper</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merak-helper</span></span></code></pre></div><p>需要根据打包器，安装<code>vite-plugin-merak</code>/<code>webpack-plugin-merak </code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vite-plugin-merak</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-save-dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vite-plugin-merak</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-save-dev</span></span></code></pre></div><p>如果不使用打包器，可使用<a href="./../api/cli.html">脚手架</a></p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>以<code>vite</code>为例</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Merak } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vite-plugin-merak&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineConfig</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span><span style="color:#B392F0;">Merak</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sub1&#39;</span><span style="color:#6A737D;">/** 子应用专属的变量名 */</span><span style="color:#E1E4E8;">,)],</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Merak } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vite-plugin-merak&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineConfig</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span><span style="color:#6F42C1;">Merak</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sub1&#39;</span><span style="color:#6A737D;">/** 子应用专属的变量名 */</span><span style="color:#24292E;">,)],</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><blockquote><p><code>fakeGlobalVar</code>必须是一个合法的,未被占用的变量名,和<code>umd</code>中<code>library name</code>性质差不多</p></blockquote><blockquote><p><code>webpack</code>见<a href="https://github.com/fgsreally/merak/blob/main/examples/vue-cli/vue.config.js" target="_blank" rel="noreferrer">example</a></p></blockquote><h3 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-label="Permalink to &quot;代码&quot;">​</a></h3><p>以<code>vue</code>为例，</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// in main.ts</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { $onMount, $onUnmount } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;merak-helper&#39;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> app</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AppType</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createApp</span><span style="color:#E1E4E8;">(App)</span></span>
<span class="line"><span style="color:#E1E4E8;">  app.</span><span style="color:#B392F0;">mount</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#app&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">$onMount</span><span style="color:#E1E4E8;">(render)</span><span style="color:#6A737D;">// 挂载时执行</span></span>
<span class="line"><span style="color:#B392F0;">$onUnmount</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> app.</span><span style="color:#B392F0;">unmount</span><span style="color:#E1E4E8;">())</span><span style="color:#6A737D;">// 卸载时执行</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// in main.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { $onMount, $onUnmount } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;merak-helper&#39;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> app</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AppType</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createApp</span><span style="color:#24292E;">(App)</span></span>
<span class="line"><span style="color:#24292E;">  app.</span><span style="color:#6F42C1;">mount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#app&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">$onMount</span><span style="color:#24292E;">(render)</span><span style="color:#6A737D;">// 挂载时执行</span></span>
<span class="line"><span style="color:#6F42C1;">$onUnmount</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> app.</span><span style="color:#6F42C1;">unmount</span><span style="color:#24292E;">())</span><span style="color:#6A737D;">// 卸载时执行</span></span></code></pre></div><p>就是暴露生命周期，没有什么特殊的</p><blockquote><p>如果无法暴露生命周期，详见<a href="./mode.html#iframe模式">iframe模式</a></p></blockquote><h2 id="主应用" tabindex="-1">主应用 <a class="header-anchor" href="#主应用" aria-label="Permalink to &quot;主应用&quot;">​</a></h2><blockquote><p>创建<code>Merak</code>实例，必须先于<code>html</code>挂载 和无界差不多，使用了<code>web component</code></p></blockquote><p>在<code>js</code>中</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { CompileLoader, Merak } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;merak-core&#39;</span></span>
<span class="line"><span style="color:#6A737D;">/** 设置加载器 */</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">loader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CompileLoader</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#6A737D;">/** 设置子应用配置 */</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Merak</span><span style="color:#E1E4E8;">(name</span><span style="color:#6A737D;">/** 子应用name */</span><span style="color:#E1E4E8;">, url</span><span style="color:#6A737D;">/** 子应用url */</span><span style="color:#E1E4E8;">, { loader })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { CompileLoader, Merak } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;merak-core&#39;</span></span>
<span class="line"><span style="color:#6A737D;">/** 设置加载器 */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">loader</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CompileLoader</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">/** 设置子应用配置 */</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Merak</span><span style="color:#24292E;">(name</span><span style="color:#6A737D;">/** 子应用name */</span><span style="color:#24292E;">, url</span><span style="color:#6A737D;">/** 子应用url */</span><span style="color:#24292E;">, { loader })</span></span></code></pre></div><p>在<code>html</code>中</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">merak-app</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:data-merak-id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">merak-app</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">merak-app</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:data-merak-id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">merak-app</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><code>vue</code><a href="./vue.html">详见</a></p><p><code>react</code><a href="./react.html">详见</a></p>`,25),e=[o];function t(c,r,y,i,E,d){return a(),n("div",null,e)}const m=s(l,[["render",t]]);export{h as __pageData,m as default};
